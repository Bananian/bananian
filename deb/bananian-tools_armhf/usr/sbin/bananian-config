#!/bin/bash

# The MIT License (MIT)
#
# Copyright (c) 2014 Nico Isenbeck <contact@bananian.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# clear the screen
clear

# prepare tmp dir
TMPDIR=$(mktemp -d)
cd $TMPDIR

# mount /dev/mmcblk0p1
mkdir ${TMPDIR}/mnt
mount /dev/mmcblk0p1 ${TMPDIR}/mnt

echo -e "---------------------------------------------------------------------------------"
echo -e "\033[40;37mWelcome to bananian-config!\033[0m \n"
echo -e "This script assists you to set up some basic parameters... \n"
echo -e "For news and updates check: http://www.bananian.org \n"

# collect system configuration
[ -f /etc/bananian_platform ] && BANANIAN_PLATFORM=$(cat /etc/bananian_platform) || BANANIAN_PLATFORM="BananaPi"
[ -f /etc/bananian_version ] && BANANIAN_VERSION=$(cat /etc/bananian_version) || BANANIAN_VERSION=140801
source /etc/default/keyboard
ROOTPW=$(grep root /etc/shadow | awk -F ':' '{print $2}')
DEFAULTROOTPW='$6$/QGAKW6x$crDc1KVl8u/mhU9l.LPxm3b47PIzZtjL0SmSDlEbInHu6UsusGnuCjSs2ngwv4HekpK0SwEyfKWPf97zHul.71'
TIMEZONE=$(cat /etc/timezone)
HOSTNAME=$(cat /etc/hostname)

#echo $BANANIAN_PLATFORM # Bananian platform/board
#echo $BANANIAN_VERSION	 # Bananian Release
#echo $XKBLAYOUT	 # keyboard layout
#echo $ROOTPW		 # hashed root password
#echo $DEFAULTROOTPW 	 # Bananian initial password hash (pi)
#echo $TIMEZONE		 # timezone
#echo $LANG		 # locale
#echo $HOSTNAME		 # hostname (as in /etc/hostname)

if [ $BANANIAN_VERSION -lt 150801 ]; then {
	echo -e "---------------------------------------------------------------------------------"
	echo -e "\033[0;31mThis version of bananian-config requires Bananian Linux 15.08 (or later). Exiting\033[0m \n"
	exit
} fi

echo -e "---------------------------------------------------------------------------------"
find /dev/input/ -name "*kbd*" | egrep '.*' > /dev/null 2>&1
if [ $? -ne 0 ]; then {
	echo -e "No keyboard found. Skipping keyboard configuration."
	echo -e  ""
} else {
	echo -n "Your current keyboard layout is '${XKBLAYOUT}'. Do you want to change it? (y/N) "
	read CHANGE
	if [ "$CHANGE" = "y" ]; then {
		echo -e "\nConfiguring keyboard layout... \n"
		dpkg-reconfigure --priority=high keyboard-configuration
		/etc/init.d/keyboard-setup restart
		echo -e ""
	} fi
} fi

echo -e "---------------------------------------------------------------------------------"
if [ "$ROOTPW" = "$DEFAULTROOTPW" ]; then {
	echo -e "\033[0;31mYour current root password is still 'pi'. You have to change it now!\033[0m"
        echo -e "\nConfiguring root password... \n"
	passwd
	echo -e ""
} else {
	echo -n "Do you want to change your root password? (y/N) "
	read CHANGE
	if [ "$CHANGE" = "y" ]; then {
	        echo -e "\nConfiguring root password... \n"
        	passwd
		echo -e ""
	} fi
} fi

echo -e "---------------------------------------------------------------------------------"
echo -n "Your current timezone is '${TIMEZONE}'. Do you want to change it? (y/N) "
read CHANGE
if [ "$CHANGE" = "y" ]; then {
        echo -e "\nConfiguring timezone... \n"
	dpkg-reconfigure tzdata
} fi

echo -e "---------------------------------------------------------------------------------"
echo -n "Your current locale is '${LANG}'. Do you want to change it? (y/N) "
read CHANGE
if [ "$CHANGE" = "y" ]; then {
        echo -e "\nConfiguring locales... \n"
        dpkg-reconfigure locales
	echo -e ""
} fi

echo -e "---------------------------------------------------------------------------------"
echo -n "Your current hostname is '${HOSTNAME}'. Do you want to change it? (y/N) "
read CHANGE
if [ "$CHANGE" = "y" ]; then {
        echo -e "\nConfiguring hostname... (restart required) \n"
	echo -n "Enter new hostname: "
	read NEW_HOSTNAME
	CHECK=$(echo $NEW_HOSTNAME | grep -E "[^[:alnum:]\-]")
	if [[ "$CHECK" != "" ]] || [[ "$NEW_HOSTNAME" = "" ]]; then {
		echo -e "\033[0;31m'${NEW_HOSTNAME}' is not a valid hostname! Skipping...\033[0m"
	} else {
		echo $NEW_HOSTNAME > /etc/hostname
		/etc/init.d/hostname.sh
	} fi
	echo -e ""
} fi

if [ -f "${TMPDIR}/mnt/uImage-next" ] && [ -f "${TMPDIR}/mnt/uImage" ]; then {
	echo -e "---------------------------------------------------------------------------------"
	echo -n "Mainline Kernel (4.x) is currently enabled. Do you want to disable it? (y/N) "
	read CHANGE
	if [ "$CHANGE" = "y" ]; then {
                rm ${TMPDIR}/mnt/uImage-next
                echo -e "\nMainline Kernel disabled..."
		echo -e "---------------------------------------------------------------------------------"
		echo -n "Do you also want to remove all mainline Kernel packages? (Y/n) "
		read CHANGE
		if [ "$CHANGE" != "n" ]; then {
			PACKAGES=$(dpkg-query -W -f='${Package} ${Status} \n' linux-\*-4.\*-bananian 2>/dev/null | grep "ok installed" | awk -F ' ' '{print $1}' | tr '\n' ' ')
			if [ -n "$PACKAGES" ]; then {
				aptitude remove -y $PACKAGES
				echo -e "Packages removed..."
			} fi
		} fi
	} fi
} fi

echo -e "---------------------------------------------------------------------------------"
echo -e "Your current hardware configuration is: ${BANANIAN_PLATFORM}"
echo -n "Do you want to change it? (y/N) "
read CHANGE
if [ "$CHANGE" = "y" ]; then {
        echo -e ""
	bananian-hardware
        echo -e ""
} fi

echo -e "---------------------------------------------------------------------------------"
echo -n "Do you want to expand the root file system (recommended)? (y/N) "
read CHANGE
if [ "$CHANGE" = "y" ]; then {
        echo -e "\nExpanding root file system... (ignore the warnings and reboot immediately) \n"
	raspi-config --expand-rootfs
        echo -e ""
} fi

# clean up
umount ${TMPDIR}/mnt && rm -rf $TMPDIR

echo -e "---------------------------------------------------------------------------------"
echo -e "\033[32;40mdone! please reboot your system now! (shutdown -r now)\033[0m \n"
